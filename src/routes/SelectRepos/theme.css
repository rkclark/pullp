@import "../../css/colors.css";
@import "../../css/units.css";


.loading, .error {
  width: 100%;
  display: flex;
  justify-content: center;
}

.loading svg {
  margin: 10rem auto;
  width: 5rem;
  height: 5rem;
}

.title {
  color: var(--secondary-dark);
  font-weight: normal;
  font-size: 2rem;
  text-align: center;
  margin: 3rem auto;
}

.intro {
  font-family: 'Roboto', sans-serif;
  text-transform: uppercase;
  font-size: 1.3rem;
  color: var(--light-grey);
  text-align: center;
  margin: 1rem auto;
}

.paginationContainer {
  justify-self: center;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 90%;
  margin: 4rem auto;
  position: relative;
}

@media only screen and (min-width: 840px) {
  .paginationContainer {
    width: 80rem;
  }
} 

.buttonContainer {
  position: absolute;
}

@media only screen and (max-width: 720px) {
  .buttonContainer {
    position: static;
    margin: 0.5rem auto;
  }

  .paginationContainer {
    flex-direction: column;
  }
} 


.previousButton {
  left: 16rem;
}

.firstButton {
  left: 2rem;
}

.nextButton {
  right: 16rem;
}

.lastButton {
  right: 2rem;
}

.filterInput {
  width: 20rem;
}

.filterLabel {
  margin-right: var(--spacing-2);
}

.currentPage {
  line-height: 4rem;
  font-family: 'Roboto', sans-serif;
  text-transform: uppercase;
  font-size: 1.3rem;
  color: var(--light-grey);
}

.reposContainer {
  justify-self: center;
  width: 100%;
}

.filterContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 2rem auto 4rem;
}

.filterContainer label {
  font-family: 'Roboto', sans-serif;
  text-transform: uppercase;
  font-size: 1.5rem;
  color: var(--medium-grey);
}

.filterContainer input {
  flex-basis: 40rem;
  font-size: 1.5rem;
  border-radius: 0.3rem;
  border: 0.1rem solid var(--light-grey);
  box-shadow: inset 0 -0.4rem 0 0 rgba(0, 0, 0, 0.08);
  height: 5rem;
  padding: 0 1rem;
  transition: all 0.5s ease;
  color: var(--medium-grey);
}

.filterContainer input:focus {
  box-shadow: inset 0 -0.4rem 0 0 var(--secondary-medium);
}
